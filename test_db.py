import os
import psycopg2
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


def test_postgres_connection():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL"""
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –±–∞–∑–µ postgres
        conn = psycopg2.connect(
            dbname="postgres",
            user=os.getenv("DB_USER", "postgres"),
            password=os.getenv("DB_PASSWORD", "password"),
            host=os.getenv("DB_HOST", "localhost"),
            port=os.getenv("DB_PORT", "5432"),
            client_encoding='UTF-8'
        )

        with conn.cursor() as cursor:
            cursor.execute("SELECT version();")
            version = cursor.fetchone()
            print(f"‚úÖ PostgreSQL version: {version[0]}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã
            cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'hh_vacancies'")
            exists = cursor.fetchone()
            if exists:
                print("‚úÖ –ë–∞–∑–∞ hh_vacancies —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                print("‚ÑπÔ∏è –ë–∞–∑–∞ hh_vacancies –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        conn.close()
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False


def test_db_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres
        conn = psycopg2.connect(
            dbname="postgres",
            user=os.getenv("DB_USER", "postgres"),
            password=os.getenv("DB_PASSWORD", "password"),
            host=os.getenv("DB_HOST", "localhost"),
            port=os.getenv("DB_PORT", "5432")
        )
        conn.autocommit = True

        with conn.cursor() as cursor:
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            cursor.execute("SELECT 1 FROM pg_database WHERE datname = 'hh_vacancies'")
            if not cursor.fetchone():
                cursor.execute("CREATE DATABASE hh_vacancies")
                print("‚úÖ –ë–∞–∑–∞ hh_vacancies —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print("‚úÖ –ë–∞–∑–∞ hh_vacancies —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        conn.close()
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ë–î: {e}")
        return False


if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL...")

    if test_postgres_connection():
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        test_db_creation()
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ó–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL (Get-Service -Name postgresql*)")
        print("2. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ –ø–∞—Ä–æ–ª—å –≤ —Ñ–∞–π–ª–µ .env")
        print("3. –î–æ—Å—Ç—É–ø–µ–Ω –ª–∏ localhost:5432")
